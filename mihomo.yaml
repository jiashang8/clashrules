proxy-providers:
  proxy1:
    url: ""
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    override:
      additional-prefix: "[proxy1]"
    proxy: 直连

# 节点信息
proxies:
  - {name: 直连, type: direct}

# 全局配置 
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7894
allow-lan: true
bind-address: "*"
ipv6: false
unified-delay: true
tcp-concurrent: true
log-level: warning
find-process-mode: 'off'
# interface-name: en0
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 15
disable-keep-alive: false
profile:
  store-selected: true
  store-fake-ip: true

#GeoX
geodata-mode: false
# GEO 文件加载模式（standard：标准加载器/memconservative：专为内存受限 (小内存) 设备优化的加载器 (默认值)）
geodata-loader: standard
geo-auto-update: true
geo-update-interval: 24
geox-url:
  geoip: "https://gh-proxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat"
  geosite: "https://gh-proxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
  mmdb: "https://gh-proxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/country-lite.mmdb"
  asn: "https://gh-proxy.com/https://github.com/xishang0128/geoip/releases/download/latest/GeoLite2-ASN.mmdb"

# 控制面板
external-controller: 0.0.0.0:9090
secret: ""
external-ui: "/etc/nikki/run"
external-ui-name: zashboard
external-ui-url: "https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip"
# 嗅探
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - "+.v2ex.com"
  skip-domain:
    - "Mijia Cloud"
    - "dlg.io.mi.com"
    - "+.push.apple.com"
    - "+.apple.com"
    - "+.wechat.com"
    - "+.qpic.cn"
    - "+.qq.com"
    - "+.wechatapp.com"
    - "+.vivox.com"
    # 向日葵服务
    - "+.oray.com"
    - "+.sunlogin.net"
# 入站  
tun:
  enable: true
  # system/gvisor/mixed
  stack: mixed
  dns-hijack: ["any:53", "tcp://any:53"]
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true
# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: true
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "geosite:private"
    - "geosite:connectivity-check"
    - "time.*.com"
    - "ntp.*.com"
    - "geosite:cn"
  default-nameserver:
    - 223.5.5.5
  proxy-server-nameserver:
    - 223.6.6.6
  # namesever尽量用运营商提供的DNS
  nameserver:
    
    - 223.6.6.6
    - 119.29.29.29
# 出站策略
pr: &pr {type: select, proxies: [🚀 默认代理, 🔯 自动故转, 🔯 AI故转, ♻️ 香港自动, ♻️ 新加坡自动, ♻️ 台湾自动, ♻️ 美国自动, ♻️ 自动选择, 🇭🇰 香港节点, 🇸🇬 新加坡节点,🇨🇳 台湾节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🌍 其他地区节点,🌐 全部节点, 直连]}
proxy-groups:
  - {name: 🚀 默认代理, type: select, proxies: [🔯 自动故转, 🔯 AI故转, ♻️ 香港自动, ♻️ 新加坡自动, ♻️ 台湾自动, ♻️ 美国自动, ♻️ 自动选择, 🇭🇰 香港节点, 🇸🇬 新加坡节点,🇨🇳 台湾节点,  🇯🇵 日本节点, 🇺🇲 美国节点,🌍 其他地区节点, 🌐 全部节点, 直连]}
  - {name: 📹 YouTube, <<: *pr}
  - {name: 🍀 Google, <<: *pr}
  - {name: 📹 Spotify, <<: *pr}
  - {name: 📹 Binance, <<: *pr}
  - {name: 🤖 Ai, <<: *pr}
  - {name: 🎵 TikTok, <<: *pr}
  - {name: 🍎 Apple, type: select, proxies: [直连, 🚀 默认代理]}
  - {name: 🎯 直连, type: select, proxies: [直连, 🚀 默认代理]}
  - {name: 🐟 漏网之鱼, <<: *pr}
  - {name: 🇭🇰 香港节点, type: select, include-all: true, filter: "(?i)港|hk|hongkong|hong kong"}
  - {name: 🇸🇬 新加坡节点, type: select, include-all: true, filter: "(?i)新|sg|singapore"}
  - {name: 🇨🇳 台湾节点, type: select, include-all: true, filter: "(?i)台|tw|taiwan"}
  - {name: 🇯🇵 日本节点, type: select, include-all: true, filter: "(?i)日|jp|japan"}
  - {name: 🇺🇲 美国节点, type: select, include-all: true, filter: "(?i)美|us|unitedstates|united states"}
  - name: 🌍 其他地区节点
    type: url-test
    include-all: true
    tolerance: 158
    interval: 300
    filter: "(?i)[)）]?(日|韩|英|德|西|俄|印|土|意|荷)"
  - {name: ♻️ 香港自动, type: url-test, include-all: true, tolerance: 158, interval: 300, filter: "(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|深|美)).)*$"}
  - {name: ♻️ 新加坡自动, type: url-test, include-all: true, tolerance: 158, interval: 300, filter: "(?=.*(新|SG|(?i)singapore))^((?!(台|日|韩|港|深|美)).)*$"}
  - {name: ♻️ 台湾自动, type: url-test, include-all: true, tolerance: 158, interval: 300, filter: "(?=.*(台|TW|(?i)taiwan))^((?!(新|日|韩|港|深|美)).)*$"}
  - {name: ♻️ 美国自动, type: url-test, include-all: true, tolerance: 158, interval: 300, filter: "(?=.*(美|US|(?i)States|America))^((?!(港|日|韩|新)).)*$"}
  - {name: ♻️ 自动选择, type: url-test, include-all: true, tolerance: 158, interval: 300, filter: "^((?!(直连)).)*$"}
    # 故障转移组（正确引用策略组）
  - name: 🔯 自动故转
    type: fallback
    proxies:
      - ♻️ 新加坡自动
      - ♻️ 香港自动
      - 🌍 其他地区节点  
    url: "http://www.gstatic.com/generate_204"
    interval: 60
    timeout: 2000
  - name: 🔯 AI故转
    type: fallback
    proxies:
      - ♻️ 美国自动
      - ♻️ 台湾自动
    url: "http://www.gstatic.com/generate_204"
    interval: 60
    timeout: 2000
  - {name: 🌐 全部节点, type: select, include-all: true}
# 规则匹配
rules:
  
  - GEOIP,private,直连,no-resolve
  - GEOSITE,private,直连
  - GEOSITE,tencent,直连
  - GEOSITE,category-ai-!cn,🤖 Ai
  - GEOSITE,youtube,📹 YouTube
  - GEOSITE,spotify,📹 Spotify
  - GEOSITE,binance,📹 Binance
  - GEOSITE,google,🍀 Google
  - GEOSITE,tiktok,🎵 TikTok
  - GEOSITE,apple-cn,🍎 Apple
  - GEOSITE,category-scholar-!cn,🚀 默认代理
  - GEOSITE,biliintl,🚀 默认代理
  - GEOSITE,steam@cn,直连
  - GEOSITE,category-games@cn,直连
  - GEOSITE,gfw,🚀 默认代理 
  - GEOSITE,geolocation-!cn,🚀 默认代理
  - GEOSITE,cn,直连
  - GEOIP,google,🍀 Google,no-resolve
  - GEOIP,cn,🎯 直连,no-resolve
  - MATCH,🐟 漏网之鱼
